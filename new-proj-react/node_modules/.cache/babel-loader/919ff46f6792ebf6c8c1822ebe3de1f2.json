{"ast":null,"code":"var _jsxFileName = \"/Users/kallistokate/Documents/Githubtest/New-tms/new-proj-react/src/App.js\";\nimport React from 'react';\nimport ListItem from './ListItem';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      chosen: 0,\n      ingredients: {\n        'имя ингредиента': 'выбран или нет'\n      }\n    };\n\n    this.onCheck = (ingredientName, checked) => {\n      console.log(ingredientName, checked); // const x = ...this.state.ingredients\n      // this.state.ingredients[ingredientName] = checked; лучше делать через сетСтейт\n      //1) Копируем объект\n\n      const newIngredients = { ...this.state.ingredients\n      }; //2)Изменяем его\n\n      newIngredients[ingredientName] = checked; //3)   Передаем измененную копию\n\n      this.setState({\n        ingredients: newIngredients\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ListItem, {\n      ingredientName: \"1\",\n      onCLick: this.onCheck,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ListItem, {\n      ingredientName: \"2\",\n      onCLick: this.onCheck,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ListItem, {\n      ingredientName: \"3\",\n      onCLick: this.onCheck,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ListItem, {\n      ingredientName: \"4\",\n      onCLick: this.onCheck,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ListItem, {\n      ingredientName: \"5\",\n      onCLick: this.onCheck,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ListItem, {\n      ingredientName: \"6\",\n      onCLick: this.onCheck,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kallistokate/Documents/Githubtest/New-tms/new-proj-react/src/App.js"],"names":["React","ListItem","App","Component","state","chosen","ingredients","onCheck","ingredientName","checked","console","log","newIngredients","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,WAAP;;AAGA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCC,KAFgC,GAExB;AACNC,MAAAA,MAAM,EAAE,CADF;AAENC,MAAAA,WAAW,EAAE;AACX,2BAAmB;AADR;AAFP,KAFwB;;AAAA,SAShCC,OATgC,GAStB,CAACC,cAAD,EAAiBC,OAAjB,KAA6B;AACrCC,MAAAA,OAAO,CAACC,GAAR,CAAYH,cAAZ,EAA4BC,OAA5B,EADqC,CAGrC;AAEA;AACA;;AACA,YAAMG,cAAc,GAAG,EAAE,GAAG,KAAKR,KAAL,CAAWE;AAAhB,OAAvB,CAPqC,CAQrC;;AACAM,MAAAA,cAAc,CAACJ,cAAD,CAAd,GAAiCC,OAAjC,CATqC,CAUrC;;AACA,WAAKI,QAAL,CAAc;AACZP,QAAAA,WAAW,EAAEM;AADD,OAAd;AAID,KAxB+B;AAAA;;AA0BhCE,EAAAA,MAAM,GAAG;AACP,wBAEE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAU,MAAA,cAAc,EAAC,GAAzB;AAA6B,MAAA,OAAO,EAAE,KAAKP,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,QAAD;AAAU,MAAA,cAAc,EAAC,GAAzB;AAA6B,MAAA,OAAO,EAAE,KAAKA,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,QAAD;AAAU,MAAA,cAAc,EAAC,GAAzB;AAA6B,MAAA,OAAO,EAAE,KAAKA,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE,oBAAC,QAAD;AAAU,MAAA,cAAc,EAAC,GAAzB;AAA6B,MAAA,OAAO,EAAE,KAAKA,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAKE,oBAAC,QAAD;AAAU,MAAA,cAAc,EAAC,GAAzB;AAA6B,MAAA,OAAO,EAAE,KAAKA,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eAME,oBAAC,QAAD;AAAU,MAAA,cAAc,EAAC,GAAzB;AAA6B,MAAA,OAAO,EAAE,KAAKA,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CAFF;AAWD;;AAtC+B;;AAwClC,eAAeL,GAAf","sourcesContent":["import React from 'react';\nimport ListItem from './ListItem';\nimport './App.css';\n\n\nclass App extends React.Component {\n\n  state = {\n    chosen: 0,\n    ingredients: {\n      'имя ингредиента': 'выбран или нет'\n    },\n  }\n\n  onCheck = (ingredientName, checked) => {\n    console.log(ingredientName, checked);\n\n    // const x = ...this.state.ingredients\n\n    // this.state.ingredients[ingredientName] = checked; лучше делать через сетСтейт\n    //1) Копируем объект\n    const newIngredients = { ...this.state.ingredients };\n    //2)Изменяем его\n    newIngredients[ingredientName] = checked;\n    //3)   Передаем измененную копию\n    this.setState({\n      ingredients: newIngredients,\n\n    })\n  }\n\n  render() {\n    return (\n\n      <div className=\"App\">\n        <ListItem ingredientName=\"1\" onCLick={this.onCheck} />\n        <ListItem ingredientName=\"2\" onCLick={this.onCheck} />\n        <ListItem ingredientName=\"3\" onCLick={this.onCheck} />\n        <ListItem ingredientName=\"4\" onCLick={this.onCheck} />\n        <ListItem ingredientName=\"5\" onCLick={this.onCheck} />\n        <ListItem ingredientName=\"6\" onCLick={this.onCheck} />\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}